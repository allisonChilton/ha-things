  color_scroll:
    variables:
      period: 256
      update_time: "{{ states('input_number.color_scroll_refresh') }}" # you must create a helper called color_scroll_refresh or hardcode this value (seconds)
      total_loop_time: "{{ states('input_number.color_scroll_duration') }}" # create helper called color_scroll_duration or hardcode this value (seconds)
      clen: 1529
      step: ' {{ clen / total_loop_time * update_time }} '
      color_array: !include color_loop.txt
    sequence:
    - service: input_boolean.turn_on 
      target:
        entity_id: input_boolean.party_mode # optional helper to kill execution without having to cancel script explicitly
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.party_mode
            state: "on"
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.foyer_lamp_level_light_color_on_off
          data:
            rgb_color: [' {{color_array[((repeat.index * step) | int) % clen][0] }} ', ' {{color_array[((repeat.index * step) | int) % clen][1] }} ', ' {{color_array[((repeat.index * step) | int) % clen][2] }} ']
        - delay: ' {{ update_time }} '
